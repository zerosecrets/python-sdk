name: Build and Publish

on:
  workflow_dispatch:
  release:
    types: [published, unpublished]
    branches:
      - main

jobs:
  set-commit-hash:
    name: A commit hash of the latest release
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.commit-hash.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout the repo
      - id: commit-hash
        name: Grab the commit hash
        uses: ottofeller/github-actions/latest-release-commit-hash@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint code with flake8
    needs: [set-commit-hash]
    strategy:
      matrix:
        python-version: [ '3.11' ]
        poetry-version: [ '1.5.1' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Lint code
        run: |
          poetry install
          poetry run flake8 -v

  test:
    name: Run unit tests
    needs: [set-commit-hash]
    strategy:
      matrix:
        python-version: [ '3.11' ]
        poetry-version: [ '1.5.1' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Run tests
        run: |
          poetry install
          poetry run pytest -v

  build-and-publish:
    name: Build Python package and publish to PyPI
    needs: [lint, test]
    strategy:
      matrix:
          python-version: [ '3.11' ]
          poetry-version: [ '1.5.1' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
            poetry-version: ${{ matrix.poetry-version }}
      - name: Install deps
        run: poetry install
      - name: Build and publish
        run: >-
            python3 -m
            build
            --sdist
            --wheel
            --outdir dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
